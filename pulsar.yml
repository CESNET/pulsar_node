- hosts: nometapuppet
  roles:
    - role: metacentrum.krbnfs
      become: yes

- hosts: pulsarservers
  vars:
    pulsar_user: "{{ pulsar.user_name }}"
    golang_gopath: '/opt/workspace-go'
    singularity_version: "3.7.4"
    singularity_go_path: "{{ golang_install_dir }}"
    pbs_drmaa_version: "1.0.19"

    # Miniconda settings
    miniconda_prefix: "{{ pulsar_network_homedir }}/conda"
    miniconda_version: 23.1.0
    miniconda_base_env_packages: ['mamba']
    miniconda_channels:
      - 'conda-forge'
      - 'bioconda'
      - 'iuc'
      - 'r'
      - 'anaconda'
      - 'petrnovak' # DEMON: this is pecific for RE Galaxy and pulsar-re but could be usefull also for usegalaxy.cz if using RE tools
      - 'defaults'

  pre_tasks:
    - group:
        name: "{{ pulsar.group }}"
        gid: "{{ pulsar.gid }}"
      become: yes
    - user:
        name: "{{ pulsar.user_name }}"
        uid: "{{ pulsar.uid }}"
        group: "{{ pulsar.group }}"
        shell: /bin/bash
      become: yes

    - name: Create pulsar root and persistent files folder
      ansible.builtin.file:
        path: "{{ pulsar_persistence_dir }}"
        state: directory
        recurse: yes
        #mode: 'a+x'
        owner: "{{ pulsar.user_name }}"
        group: "{{ pulsar.group }}"
      become: yes

  roles:
    - role: metacentrum.pulsar
      become: yes
#    - gantsign.golang
#    - cyverse-ansible.singularity
    - role: galaxyproject.pulsar
      become: yes
      become_user: "{{ pulsar.user_name }}"

  post_tasks:
    ## DEMON: This task might be necessary to comment out for pulsar-re
    - name: copy dependency_resolvers_config into pulsar config folder
      ansible.builtin.copy:
        src: dependency_resolvers_conf.xml
        dest: "{{ pulsar_root }}/config/dependency_resolvers_conf.xml"
      become: yes
    - name: Create .drmaa folder in NFS home
      ansible.builtin.file:
        path: "{{ pulsar_network_homedir }}/.drmaa"
        state: directory
      become: yes
      become_user: "{{ pulsar.user_name }}"
    - name: Create cleanup_jobs dir
      ansible.builtin.file:
        path: "{{ pulsar_cleanup_dir }}"
        state: directory
        recurse: yes
        mode: 'a+x'
      become: yes
      become_user: "{{ pulsar.user_name }}"      
    - name: Creates entry in crontab "tmpreaper call in staging dir"
      ansible.builtin.cron:
        name: "tmpreaper in staging dir"
        minute: "7"
        hour: "*/6" 
        job: "/usr/sbin/tmpreaper --verbose=0 --showdeleted --all --mtime --mtime-dir --runtime=600 {{ pulsar_cleanup_delay }} {{ pulsar_staging_dir }} >> {{ pulsar_cleanup_dir }}/cleaning_pulsar_files.log"
      become: yes
      become_user: "{{ pulsar.user_name }}"
    - name: Creates entry in crontab "tmpreaper call on old conda environments"
      ansible.builtin.cron:
        name: "tmpreaper on old conda envs"
        minute: "7"
        hour: "*/12" 
        job: "/usr/sbin/tmpreaper --verbose=0 --showdeleted --all --ctime --mtime-dir --runtime=600 {{ pulsar_cleanup_delay }} {{ miniconda_prefix }}/envs >> {{ pulsar_cleanup_dir }}/cleaning_conda_envs.log"
      become: yes
      become_user: "{{ pulsar.user_name }}"
      when: install_nfs_conda
